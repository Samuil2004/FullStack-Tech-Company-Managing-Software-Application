@page "{pageIndex:int?}"
@model MediaBazaarWeb.Pages.AvailabilityModel
@{
    ViewData["Title"] = "Availability Page";

    DateTime lockStartDate = ViewData["LockStartDate"] != null ? (DateTime)ViewData["LockStartDate"] : DateTime.MinValue;
    DateTime lockEndDate = ViewData["LockEndDate"] != null ? (DateTime)ViewData["LockEndDate"] : DateTime.MaxValue;
}

<h1>Availability Page</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<form method="post">
    <table id="availabilityTable">
        <tr>
            <td>Week Number</td>
            <td>Monday</td>
            <td>Tuesday</td>
            <td>Wednesday</td>
            <td>Thursday</td>
            <td>Friday</td>
            <td>Saturday</td>
            <td>Sunday</td>
        </tr>

        @for (int week = 0; week < 4; week++)
        {
            <tr>
                <td>Week @((week + 1).ToString())</td>
                @for (int day = 0; day < 7; day++)
                {
                    int index = week * 7 + day;
                    if (index >= Model.DatesList.Count) break;

                    DateTime currentDate = DateTime.Parse(Model.DatesList[index]);
                    bool isLocked = currentDate >= lockStartDate && currentDate <= lockEndDate;

                    <td class="availability-cell @(index < Model.IsWorking.Count ? Model.IsWorking[index] : "") @(isLocked ? "locked" : "")" data-index="@index">
                        <input type="checkbox" name="SelectedDates" value="@Model.DatesList[index]" style="display: none;" @(isLocked ? "disabled" : "") />
                        @(index < Model.AvailabilitiesWorker.Count ? Model.AvailabilitiesWorker[index] : "")
                    </td>
                }
            </tr>
        }
    </table>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@* @foreach (var item in @Model.GetPossibleShiftChanges())
{
    <h6>Would you like to take over this shift:</h6>
    <h8>Name : @item.Item1</h8>
    <h8>Date: @item.Item2</h8>
    <h8>Shift : @item.Item3.ToString()</h8>
    <button>Take shift</button>
} *@
@* 
<div class="shift-container">
    @foreach (var item in @Model.GetPossibleShiftChanges())
    {
        <div class="shift-card">
            <h6>Would you like to take over this shift?</h6>
            <p><span class="label">Name:</span> @item.Item1</p>
            <p><span class="label">Date:</span> @item.Item2</p>
            <p><span class="label">Shift:</span> @item.Item3.ToString()</p>
            <button class="take-shift-btn">Take Shift</button>
        </div>
    }
</div> *@

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-page="/Availability" asp-route-pageIndex="@(Model.CurrentPage - 1)" tabindex="-1" aria-disabled="@(Model.CurrentPage == 1)">Previous</a>
        </li>
        <li class="page-item">
            <a class="page-link" asp-page="/Availability" asp-route-pageIndex="@(Model.CurrentPage + 1)">Next</a>
        </li>
    </ul>
</nav>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cells = document.querySelectorAll('.availability-cell:not(.locked)');

            cells.forEach(cell => {
                cell.addEventListener('click', function () {
                    const checkbox = cell.querySelector('input[type="checkbox"]');
                    checkbox.checked = !checkbox.checked;

                    if (checkbox.checked) {
                        cell.classList.add('selected');
                    } else {
                        cell.classList.remove('selected');
                    }
                });
            });
        });
    </script>

    <style>
        .availability-cell {
            cursor: pointer;
            padding: 10px;
            color:white;
        }

            .availability-cell.selected {
                background-color: lightgreen;
            }

            .availability-cell.locked {
                background-color: lightgray;
                cursor: not-allowed;
                color:black
            }

                .availability-cell.locked input[type="checkbox"] {
                    display: none;
                }

       /*  .shift-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .shift-card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .shift-card:hover {
                transform: translateY(-10px);
                box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
            }

            .shift-card h6 {
                color: #333;
                font-size: 18px;
                margin-bottom: 10px;
            }

            .shift-card p {
                color: #666;
                font-size: 16px;
                margin: 8px 0;
            }

            .shift-card .label {
                font-weight: bold;
                color: #333;
            }

        .take-shift-btn {
            background-color: #28a745;
            border: none;
            border-radius: 5px;
            color: #fff;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
            padding: 10px 20px;
            transition: background-color 0.3s;
        }

            .take-shift-btn:hover {
                background-color: #218838;
            }

            .take-shift-btn:focus {
                outline: none;
            } */
    </style>
}